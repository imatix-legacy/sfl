<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>get_new_filename</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl122.htm">&lt;</A>
 | <A href="sfl124.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="get_new_filename">&nbsp;</A>
<H3><A NAME="TOC136"><TT>get_new_filename</TT></A></H3>
<PRE>
#include "sflfile.h"
char *
get_new_filename (
    const char *filename)
</PRE>
<H4>Synopsis</H4>
<P>Appends a numeric suffix (_001, _002,...) to the filename until
   it is unique. Returns a freshly-allocated string containing the
   new filename.
<H4>Source Code - (sflfile.c)</H4>
<PRE>
{
    char
        suffix [8],
        *new_name;
    int
        counter;

    for (counter = 0; ; counter++)
      {
        sprintf (suffix, "_%03d", counter);
        new_name = <A href="sfl296.htm#xstrcpy">xstrcpy</A> (NULL, filename, suffix, NULL);
        if (!<A href="sfl110.htm#file_exists">file exists</A> (new_name))
            return (new_name);
        else
            mem_free (new_name);
      }
    return (NULL);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl122.htm">&lt;</A>
 | <A href="sfl124.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
