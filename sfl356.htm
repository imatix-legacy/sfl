<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>get_sock_addr</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl355.htm">&lt;</A>
 | <A href="sfl357.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="get_sock_addr">&nbsp;</A>
<H3><A NAME="TOC369"><TT>get_sock_addr</TT></A></H3>
<PRE>
#include "sflsock.h"
int
get_sock_addr (
    sock_t handle,                      /*  Socket to get address for        */
    struct sockaddr_in *sin,            /*  Block for formatted address      */
    char *name,                         /*  Buffer for host name, or NULL    */
    int namesize                        /*  Size of host name buffer         */
)
</PRE>
<H4>Synopsis</H4>
<P>Builds an address block (struct sockaddr_in) for the local end
   of the specified connected socket. Returns 0 if okay,
   SOCKET_ERROR if there was an error. If the name argument is not
   null, looks-up the host name and returns it. The name is
   truncated to namesize characters, including a trailing null
   character.
<H4>Source Code - (sflsock.c)</H4>
<PRE>
{
#if (defined (DOES_SOCKETS))
    int
        rc;                             /*  Return code from call            */
    struct hostent
        *phe;                           /*  Host information entry           */
    argsize_t
        sin_length;                     /*  Length of address                */

    ASSERT (sin);

    /*  Get address for local connected socket                               */
    sin_length = sizeof (struct sockaddr_in);

    rc = getsockname ((SOCKET) handle, (struct sockaddr *) sin, &amp;sin_length);

    /*  Translate into host name string, only if wanted                      */
    if (name != NULL &amp;&amp; rc == 0)
      {
        phe = gethostbyaddr ((char *) &amp;sin-&gt; sin_addr,
                             sizeof (sin-&gt; sin_addr), AF_INET);
        if (phe)
          {
            strncpy (name, phe-&gt; h_name, namesize);
            name [namesize - 1] = '\0';
          }
      }
#   if (defined (__WINDOWS__))
    return (win_error (rc));
#   else
    return (rc);
#   endif
#else
    return ((int) SOCKET_ERROR);        /*  Sockets not supported            */
#endif
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl355.htm">&lt;</A>
 | <A href="sfl357.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
