<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>list_relink</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl180.htm">&lt;</A>
 | <A href="sfl182.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="list_relink">&nbsp;</A>
<H3><A NAME="TOC194"><TT>list_relink</TT></A></H3>
<PRE>
#include "sfllist.h"
void *
list_relink (
    void *left,
    void *list,
    void *right)
</PRE>
<H4>Synopsis</H4>
<P>Links the list into a linked list. This is a general-purpose
   function that can be used to attach and remove lists anywhere
   in a list. Sets the global variable 'list_unsafe' while the
   list is being changed. Returns the address of list.
<H4>Source Code - (sfllist.c)</H4>
<PRE>
{
    LIST *swap;

    list_unsafe = TRUE;
    swap = ((LIST *) left)-&gt; next;      /*  Exchange left pointers           */
           ((LIST *) left)-&gt; next = list;
    ((LIST *) ((LIST *) list)-&gt; prev)-&gt; next = swap;

    swap = ((LIST *) right)-&gt; prev;     /*  Exchange right pointers          */
           ((LIST *) right)-&gt; prev = ((LIST *) list)-&gt; prev;
                                     ((LIST *) list)-&gt; prev = swap;

    list_unsafe = FALSE;
    return (list);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl180.htm">&lt;</A>
 | <A href="sfl182.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
