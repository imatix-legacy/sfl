<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>strdupl</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl277.htm">&lt;</A>
 | <A href="sfl279.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="strdupl">&nbsp;</A>
<H3><A NAME="TOC291"><TT>strdupl</TT></A></H3>
<PRE>
#include "sflstr.h"
char *
strdupl (
    const char *string)
</PRE>
<H4>Synopsis</H4>
<P> Makes a duplicate of string, obtaining space with a call to
   malloc(). The allocated space is strlen (string) + 1 bytes
   long. The caller is responsible for freeing the space allocated
   by strdup when it is no longer needed. Returns a pointer to the
   allocated string, which holds a copy of the parameter string.
   Returns NULL if there was insufficient heap storage available
   to allocate the string, or if the original string was itself
   NULL. Use this function in place of the non-portable strdup()
   function. You may also want to use the more robust
   <A href="sfldoc.htm#_mem_strdup"> mem strdup</A> () function.
<H4>Source Code - (sflstr.c)</H4>
<PRE>
{
    char *copy;
    size_t length;

    if (string)
      {
        length = strlen (string) + 1;
        copy = malloc (length);
        if (copy)
            strncpy (copy, string, length);
      }
    else
        copy = NULL;

    return (copy);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl277.htm">&lt;</A>
 | <A href="sfl279.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
