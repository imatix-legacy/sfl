<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>connect_TCP</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl340.htm">&lt;</A>
 | <A href="sfl342.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="connect_TCP">&nbsp;</A>
<H3><A NAME="TOC354"><TT>connect_TCP</TT></A></H3>
<PRE>
#include "sflsock.h"
sock_t
connect_TCP (
    const char *host,                   /*  Host name                        */
    const char *service                 /*  Service name                     */
)
</PRE>
<H4>Synopsis</H4>
<P> Creates a TCP socket and connects it to a specified host and
   service. Returns a socket number or INVALID_SOCKET. In that
   case you can get the reason for the error by calling
   <A href="sfl355.htm#connect_error">connect error</A> (). This may be: <TABLE BORDER NOWRAP>
   <TR><TD ALIGN="LEFT"><B>IP NOSOCKETS</B>  <TD
   ALIGN="LEFT">Sockets not supported on this system <TR><TD
   ALIGN="LEFT"><B>IP BADHOST</B>  <TD ALIGN="LEFT">Host is not
   known <TR><TD ALIGN="LEFT"><B>IP BADPROTOCOL</B>  <TD
   ALIGN="LEFT">Cannot understand protocol name <TR><TD
   ALIGN="LEFT"><B>IP SOCKETERROR</B>  <TD ALIGN="LEFT">Cannot
   open a socket <TR><TD ALIGN="LEFT"><B>IP CONNECTERROR</B>  <TD
   ALIGN="LEFT">Cannot connect socket </TABLE> The host name may
   be a full name, NULL or "" meaning the current host, or a
   dotted-decimal number. The service may be a defined service,
   e.g. "echo", or a port number, specified as an ASCII string.
   See <A href="sfl345.htm#connect_socket">connect socket</A>() for details. Single-threaded clients
   may set ip_nonblock to FALSE and block on all read and write
   operations. They may use select() if they need to be able to
   time-out during reading/writing. Multi-threaded servers should
   set ip_nonblock to TRUE, and use select() to multiplex socket
   access. When ip_nonblock is TRUE, connect calls will return
   immediately, and the server should use select() to wait until
   the socket is ready for writing. On some systems (early
   Linux?), the select() call will fail in this situation. If you
   compile with -DBLOCKING_CONNECT, connects are done
   synchronously in all cases.
<H4>Examples</H4>
<PRE>
    sock_t handle;
    handle = connect_TCP ("", "8080");
    handle = connect_TCP (NULL, "echo");
    handle = connect_TCP ("www.imatix.com", "http");
</PRE>
<H4>Source Code - (sflsock.c)</H4>
<PRE>
{
    ASSERT (service &amp;&amp; *service);
    return (<A href="sfl345.htm#connect_socket">connect socket</A> (host,       /*  We have a host name              */
                            service,    /*  We have a service name           */
                            "tcp",      /*  Protocol is TCP                  */
                            NULL,       /*  No prepared address              */
                            3, 0));     /*  3 retries, no waiting            */
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl340.htm">&lt;</A>
 | <A href="sfl342.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
