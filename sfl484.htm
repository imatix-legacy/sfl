<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>xml_put_attr_ic</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl483.htm">&lt;</A>
 | <A href="sfl485.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="xml_put_attr_ic">&nbsp;</A>
<H3><A NAME="TOC497"><TT>xml_put_attr_ic</TT></A></H3>
<PRE>
#include "sflxml.h"
int
xml_put_attr_ic (
    XML_ITEM   *item,
    const char *name,
    const char *value,
    Bool        ignore_case)
</PRE>
<H4>Synopsis</H4>
<P>Sets, modifies, or deletes an attribute for the specified item.
   The attribute name must be supplied. If the value is NULL, the
   first attribute with the specified name is deleted. Otherwise
   it is either created or modified accordingly. If the paramater
   'ignore_case' is TRUE, the case of the attribute name is
   insignificant. Returns the number of attribute nodes created (-
   1, 0, or 1).
<H4>Source Code - (sflxml.c)</H4>
<PRE>
{
    int
        feedback = 0;
    XML_ATTR
        *attr;

    ASSERT (item);
    ASSERT (name);

    attr = <A href="sfl485.htm#xml_attr_ic">xml attr ic</A> (item, name, ignore_case);
    if (attr)
        if (value)                      /*  Value specified - update attr    */
          {
            mem_free (attr-&gt; value);
            attr-&gt; value = mem_strdup (value);
          }
        else
          {
            <A href="sfl489.htm#xml_free_attr">xml free attr</A> (attr);       /*  No value - delete attribute      */
            feedback = -1;
          }
    else
        if (value)                      /*  Value specified - update attr    */
          {
            list_create (attr, sizeof (XML_ATTR));
            if (attr)
              {
                attr-&gt; name   = mem_strdup (name);
                attr-&gt; value  = mem_strdup (value);
                attr-&gt; parent = item;
                list_relink_before (attr, &amp;item-&gt; attrs);
                feedback = 1;
              }
          }
    return (feedback);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl483.htm">&lt;</A>
 | <A href="sfl485.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
