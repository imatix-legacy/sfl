<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>eatstr</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl328.htm">&lt;</A>
 | <A href="sfl330.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="eatstr">&nbsp;</A>
<H3><A NAME="TOC342"><TT>eatstr</TT></A></H3>
<PRE>
#include "sflstr.h"
char *
eatstr (
    char **strBuff,
    char *strToEat)
</PRE>
<H4>Synopsis</H4>
<P> Eats strToEat from strBuff only if it begins with contents of
   strToEat.
<H4>Examples</H4>
<PRE>
       char strBuff[] = { "select * from mytbl;" };
       eatstr (&strBuff, "SELECT");

       On return here strBuff would be: " * from mytbl;"

    If the token is not found, then strBuff will not be affected and
    a NULL char * will be returned, but any white spaces on the left
    of strBuff would be trimed.
    Submitted by Scott Beasley &lt;jscottb@infoave.com&gt;
</PRE>
<H4>Source Code - (sflstr.c)</H4>
<PRE>
{
   int iWasToken;

   ASSERT (strBuff);
   ASSERT (strToEat);

   <A href="sfl315.htm#ltrim">ltrim</A> (*strBuff);
   <A href="sfl328.htm#istoken">istoken</A> (strBuff, strToEat, &amp;iWasToken);

   return iWasToken ? *strBuff : (char *)NULL;
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl328.htm">&lt;</A>
 | <A href="sfl330.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
