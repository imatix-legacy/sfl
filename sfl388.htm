<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>sym_set_value</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl387.htm">&lt;</A>
 | <A href="sfl389.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="sym_set_value">&nbsp;</A>
<H3><A NAME="TOC401"><TT>sym_set_value</TT></A></H3>
<PRE>
#include "sflsymb.h"
void
sym_set_value (
    SYMBOL *symbol,                     /*  Symbol to change                 */
    const char *value)                  /*  New value to assign              */
</PRE>
<H4>Synopsis</H4>
<P>Assigns a new value for the symbol; this frees any previously
   assigned value and duplicates the supplied value, which must be
   a null terminated string. If you want to assign binary values,
   you can use the symbol's data block. If the value is NULL, any
   existing value is freed and the symbol value pointer is set to
   NULL.
<H4>Source Code - (sflsymb.c)</H4>
<PRE>
{
    ASSERT (symbol);

    mem_strfree (&amp;symbol-&gt; value);      /*  Free existing value if any       */
    symbol-&gt; value = mem_strdup (value);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl387.htm">&lt;</A>
 | <A href="sfl389.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
