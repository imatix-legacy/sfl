<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>list_remove</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl182.htm">&lt;</A>
 | <A href="sfl184.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="list_remove">&nbsp;</A>
<H3><A NAME="TOC196"><TT>list_remove</TT></A></H3>
<PRE>
#include "sfllist.h"
void
list_remove (LIST *list, void *data, size_t size)
</PRE>
<H4>Synopsis</H4>
<P>Removes the node at the head of a list, copying the specified
   amount of data to the specified data block. This size must be
   exactly equal to the size of the data block. The list may not
   be empty. Use this with the macro list_pop.
<H4>Source Code - (sfllist.c)</H4>
<PRE>
{
LIST
    *node;

    ASSERT (!list_empty (list));

    node = list-&gt; next;
    ASSERT (mem_size (node) - sizeof (LIST) == size);

    memcpy ((char *) data, (char *) node + sizeof (LIST), size);
    <A href="sfl180.htm#list_unlink">list unlink</A> (node);
    mem_free (node);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl182.htm">&lt;</A>
 | <A href="sfl184.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
