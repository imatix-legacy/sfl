<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>socket_error</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl352.htm">&lt;</A>
 | <A href="sfl354.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="sfl80c.gif" ALT="SFL Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SFL</B><BR><FONT SIZE=2>Version 2.11
</TABLE>
<HR>
<A NAME="socket_error">&nbsp;</A>
<H3><A NAME="TOC366"><TT>socket_error</TT></A></H3>
<PRE>
#include "sflsock.h"
int
socket_error (
    sock_t handle)
</PRE>
<H4>Synopsis</H4>
<P>Returns an errno value for the socket, or 0 if no error was
   outstanding on the socket. This function is useful if you are
   handling sockets using the select() function: this may return
   error indicators on sockets, without precision on the type of
   error. This function will return the precise error number.
   Errors like EINPROGRESS, EAGAIN, and EWOULDBLOCK can usually be
   ignored or handled by retrying.
<H4>Source Code - (sflsock.c)</H4>
<PRE>
{
#if (defined (DOES_SOCKETS))
#   if (defined (__UTYPE_BEOS))
    return (errno);
#   else
    return (getsockopt ((SOCKET) handle, SOL_SOCKET, SO_ERROR, 0, 0));
#   endif
#else
    return (0);
#endif
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="sfl352.htm">&lt;</A>
 | <A href="sfl354.htm">&gt;</A> | <A href="sfl502.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-2000 iMatix Corporation</TABLE>
</BODY></HTML>
